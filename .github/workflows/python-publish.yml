# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest
    strategy:
       fail-fast: false
       matrix:
          python-version: [3.9]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{matrix.python-version}}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt 
    - name: Check docker installed or not
      run: docker run hello-world
    - name: Log env variables
      run: echo "The API key is:${{secrets.DOCKER_USERNAME}}"   
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v4
      with:
        name: kostasxerv/sample-flask
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: Dockerfile